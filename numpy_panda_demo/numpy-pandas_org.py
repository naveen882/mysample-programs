import numpy as np
import random
import datetime

list_of_ints = [random.sample(range(1, 101), 10) for i in range(10)]
print list_of_ints

#divide numbers in the list by 2

div_by_num = []
for lst in list_of_ints:
    div_lst = []
    for el in lst:
        div_lst.append(el/2.0)
    div_by_num.append(div_lst)
    
print div_by_num
print [[x/2.0 for x in y] for y in list_of_ints]

list_of_ints_np = np.array(list_of_ints)

div_by_num_np = list_of_ints_np / 2.0
print div_by_num_np

print div_by_num_np[0,:]
print div_by_num_np[:,0]

np.histogram
np.arange
np.isnan
np.diff

import pandas as pd

data = pd.read_csv
data.columns
data['col'] = 
data.groupby()
data.head
data.describe
data.fillna
data.apply


data = pd.read_csv('Spirit - Right Information at the Right Time_2016_AST_pro_mar.csv', header=0, parse_dates=[0], infer_datetime_format = True, dayfirst = True)
data['DOW'] = data['Dates'].apply(lambda x: x.strftime("%A"))
data.groupby('DOW')['ChatsConnected'].sum()
data.groupby('DOW')['ChatsConnected'].mean()
data.groupby('DOW')[['ChatsConnected', 'Hot Leads']].mean()
data.groupby('DOW')[['ChatsConnected', 'Hot Leads']].agg({'ChatsConnected': [min, np.mean, max,np.std], 'Hot Leads': [min, np.mean, max,np.std]})
data.groupby('DOW')[['ChatsConnected', 'Hot Leads']].agg([min, np.mean, max,np.std])




  File "<stdin>", line 1, in <module>
  File "C:\Anaconda2\lib\random.py", line 323, in sample
    raise ValueError("sample larger than population")
ValueError: sample larger than population
>>> data = random.sample(range(1, 100000000), 100000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
MemoryError
>>> data = random.sample(range(1, 100000000), 1000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
MemoryError
>>> data = random.sample(range(1, 100000), 1000)
>>> data
[42593, 81236, 62920, 42061, 31302, 22542, 25461, 49639, 60718, 58895, 29455, 60022, 28340, 443, 8785, 22084, 61333, 5107, 83072, 67995, 51066, 77813, 18986, 9782, 9736, 2102, 90415, 12007, 77022, 90352, 80137, 51459, 70608, 70153, 98135, 50382, 68511, 67555, 42100, 95355, 14777, 90096, 95774, 22637, 78167, 12827, 26465, 37884, 93053, 26903, 7974, 98166, 20362, 65895, 10611, 36052, 35349, 38247, 98382, 93992, 56260, 54134, 37503, 33931, 7969, 26274, 53954, 51283, 79864, 36938, 74753, 26084, 4558, 27538, 64048, 66568, 79232, 80890, 65955, 49514, 76000, 30129, 70362, 20419, 12598, 88232, 5210, 19426, 93329, 53588, 55946, 10639, 61299, 69396, 42622, 24983, 94598, 76532, 70379, 75230, 45614, 21563, 18309, 12296, 49018, 67901, 31431, 83255, 97752, 50803, 81530, 14667, 32063, 80106, 61726, 57345, 48032, 40717, 80081, 58919, 7190, 92490, 47164, 98366, 47086, 14797, 77650, 60511, 69190, 99375, 91304, 48990, 78209, 18867, 48563, 91893, 66182, 80538, 71185, 81838, 23691, 25507, 98386, 77354, 26704, 15782, 90530, 63831, 51177, 4977, 87340, 26820, 52734, 77223, 7808, 48084, 61145, 93576, 72674, 90811, 76277, 62238, 79584, 96768, 8161, 75938, 78616, 24285, 75427, 22827, 78375, 22194, 2653, 46995, 10068, 89484, 15170, 42331, 67072, 55279, 99886, 97123, 99011, 66543, 84536, 83184, 70343, 95166, 67618, 47572, 37560, 61312, 50281, 30690, 29639, 14820, 68035, 77068, 27127, 67005, 44050, 49, 21315, 42626, 29711, 3100, 97483, 75857, 98254, 83430, 38249, 87965, 56257, 37566, 31356, 71872, 68733, 73497, 91240, 66229, 49230, 65981, 76390, 21139, 63229, 4932, 19800, 46717, 92988, 99860, 85559, 23973, 5954, 44413, 52499, 98953, 96079, 96548, 79104, 97521, 12079, 41476, 64159, 64165, 45264, 90765, 29859, 22009, 58925, 51858, 77309, 5055, 32652, 68862, 71725, 3798, 77632, 46542, 65680, 74156, 98901, 43091, 72060, 32555, 26239, 29351, 91981, 89481, 94672, 36665, 53364, 10030, 64719, 99304, 12970, 57877, 54786, 361, 34187, 52887, 35050, 32728, 1749, 98004, 1733, 8583, 5183, 65885, 72290, 60011, 15280, 80647, 31625, 87398, 15143, 77618, 20371, 97477, 70606, 18122, 92411, 38251, 39033, 90940, 20029, 8082, 3655, 17446, 30826, 40399, 61772, 56168, 45461, 87773, 43502, 14090, 77101, 12498, 51550, 99339, 3752, 80460, 15925, 70949, 62195, 81951, 89130, 33834, 88332, 67712, 49687, 64927, 18643, 25392, 12505, 65646, 25854, 70570, 19284, 16758, 31673, 18013, 15069, 12257, 19334, 98819, 61875, 22615, 48652, 99653, 26958, 97219, 35350, 47302, 62733, 73890, 261, 57861, 20816, 56682, 11824, 18482, 54375, 28476, 62045, 53088, 94582, 40955, 74634, 51527, 27508, 2109, 1564, 54719, 27685, 54905, 35875, 4464, 16352, 3014, 41131, 3987, 66288, 54752, 629, 20026, 15659, 20341, 9651, 82884, 31734, 65483, 88780, 7809, 23315, 78087, 53278, 84631, 39947, 30433, 21675, 25593, 73602, 60311, 8102, 93185, 84528, 32233, 70971, 59900, 91877, 95128, 10934, 52889, 38145, 95912, 3282, 5313, 39224, 72237, 43186, 80112, 46333, 63568, 40777, 43426, 87454, 95284, 78398, 99463, 57779, 93379, 86365, 26476, 91878, 55874, 75984, 14688, 46440, 55764, 76591, 13209, 68333, 16985, 20666, 88703, 51280, 25579, 40620, 52300, 10426, 92477, 44404, 43358, 97363, 90515, 17314, 94560, 91768, 16034, 8904, 96661, 57340, 77441, 43188, 77491, 84663, 90720, 15083, 74065, 36251, 72276, 34396, 52393, 57368, 39935, 95440, 45863, 49888, 26055, 28989, 58046, 62914, 18500, 43327, 89701, 87780, 61762, 62772, 6210, 11200, 38593, 4664, 54613, 83176, 75069, 30164, 76063, 67069, 15438, 46959, 91120, 4877, 23971, 76922, 78801, 65025, 40644, 9646, 93841, 84439, 14547, 18196, 48378, 8819, 51728, 42588, 10390, 97540, 21065, 42496, 31947, 95953, 16357, 67488, 7744, 72604, 98604, 45931, 52953, 39136, 17721, 63115, 19186, 50263, 65829, 73960, 87284, 68619, 64012, 62657, 91015, 40791, 87390, 10513, 98102, 84380, 56479, 15475, 3142, 66808, 62248, 97797, 23977, 35285, 30436, 42101, 28095, 64688, 40659, 38936, 92142, 77501, 24808, 45858, 27054, 42800, 30876, 73246, 27383, 65191, 22324, 22444, 69405, 79356, 73547, 99546, 53505, 18048, 46000, 60536, 99471, 46354, 17887, 44635, 49495, 28618, 57105, 65964, 84722, 64084, 43392, 60730, 89198, 66349, 67033, 89222, 78384, 54659, 39071, 63884, 12879, 91956, 78457, 61023, 82516, 46726, 43712, 31030, 99293, 59758, 18906, 4709, 64331, 16653, 80871, 97884, 67002, 75547, 69645, 71143, 43679, 1524, 20124, 52681, 65413, 25719, 40180, 95439, 3375, 24805, 35937, 47606, 64092, 78257, 41042, 21360, 35278, 30812, 71704, 23741, 59483, 18239, 18638, 23678, 40313, 94198, 98914, 51552, 39209, 32530, 39068, 37029, 57914, 60239, 38663, 44193, 52612, 25274, 89530, 62341, 46872, 51242, 22832, 27457, 30318, 49690, 26168, 83138, 34630, 86147, 67027, 16305, 54250, 60359, 42505, 66428, 36108, 77649, 16644, 62619, 34827, 86698, 45159, 65784, 39348, 91056, 52778, 59360, 42982, 89389, 35330, 19871, 29463, 88947, 54283, 45179, 38344, 58050, 97538, 75514, 38672, 96449, 56621, 336, 62421, 31441, 17285, 52954, 39373, 16218, 85972, 55857, 84070, 62007, 35561, 36432, 61016, 89817, 38752, 20759, 43828, 27396, 61135, 74345, 98627, 9106, 49131, 72077, 69942, 44774, 26377, 27502, 32079, 4365, 78574, 99454, 26856, 70241, 30856, 96411, 68448, 38964, 98614, 7026, 58900, 59646, 12798, 16611, 78878, 19459, 15823, 57681, 45940, 6551, 60871, 24696, 67235, 51224, 11894, 70011, 29220, 83299, 71394, 13613, 62418, 7188, 27474, 72318, 86242, 92821, 37828, 45304, 81768, 3225, 62997, 72323, 19846, 69580, 8527, 52584, 89611, 50764, 15059, 12337, 24077, 69540, 93664, 91219, 87212, 38711, 8041, 99803, 60699, 28018, 95755, 21637, 12367, 82877, 62903, 41183, 79433, 83756, 95206, 81855, 67317, 70593, 58667, 13152, 82160, 87036, 80401, 97117, 35792, 85206, 62625, 37954, 86570, 52218, 38602, 48826, 36600, 20067, 23000, 65457, 33962, 35989, 68687, 95850, 21272, 88463, 41465, 70744, 94692, 45976, 81890, 57550, 44613, 10173, 45424, 3020, 31179, 64344, 65027, 19487, 66971, 23454, 56925, 24483, 16415, 77367, 4582, 49536, 10977, 20063, 83370, 36080, 30788, 29714, 80522, 54006, 61048, 73208, 37928, 78834, 88344, 6321, 26766, 66018, 38137, 45226, 26905, 99921, 7702, 76933, 39096, 72911, 35618, 85564, 37900, 61057, 46894, 15160, 73071, 75662, 59730, 80462, 20452, 35636, 6547, 61844, 1180, 47904, 8486, 50689, 99142, 29073, 33543, 29920, 93679, 69620, 51454, 47043, 28218, 12533, 73317, 59400, 24675, 19749, 34989, 41698, 90735, 63525, 83274, 64859, 61136, 75545, 67763, 85988, 64220, 60965, 95768, 55967, 23831, 30863, 33588, 53394, 42074, 58520, 25674, 68985, 73491, 68491, 70610, 60760, 68081, 89856, 77764, 34744, 9885, 41519, 16096, 83358, 94842, 25981, 39281, 26330, 98372, 22216, 44083, 99640, 60261, 9980, 74987, 77404, 18855, 59293, 84184, 58766, 11881, 50325, 4282, 75013, 45169, 87157, 19778, 58808, 99407, 86582, 19257, 27408, 83273, 17222, 55917, 97220, 99447, 1789, 8233, 65149, 60873, 12787, 62529, 98530, 86305, 99051, 5171, 52572, 99114, 60007, 31572, 36557, 78291, 68408, 95530, 62530, 29890, 3383, 31611, 37000, 21476]
>>> len(data)
1000
>>> np.histogram(data)
(array([ 76,  95, 106, 100,  98,  94, 130, 102,  85, 114], dtype=int64), array([  4.90000000e+01,   1.00362000e+04,   2.00234000e+04,
         3.00106000e+04,   3.99978000e+04,   4.99850000e+04,
         5.99722000e+04,   6.99594000e+04,   7.99466000e+04,
         8.99338000e+04,   9.99210000e+04]))
>>> hist, bins = np.histogram(data)
>>> hist
array([ 76,  95, 106, 100,  98,  94, 130, 102,  85, 114], dtype=int64)
>>> bins
array([  4.90000000e+01,   1.00362000e+04,   2.00234000e+04,
         3.00106000e+04,   3.99978000e+04,   4.99850000e+04,
         5.99722000e+04,   6.99594000e+04,   7.99466000e+04,
         8.99338000e+04,   9.99210000e+04])
>>> data = random.sample(range(1, 100000), 1000)
>>> data
[40046, 82699, 33834, 47772, 89261, 21262, 92805, 26818, 30271, 28587, 11425, 52423, 21965, 12862, 19826, 320, 65227, 14380, 89961, 76434, 90382, 29354, 50918, 99604, 45446, 78768, 62298, 24780, 67499, 99310, 33009, 32468, 63396, 131, 9802, 91326, 89665, 4573, 91010, 7500, 68402, 52989, 25091, 55038, 64527, 39679, 65454, 75688, 9721, 98935, 31604, 34273, 99022, 62405, 62442, 6008, 89299, 5549, 33815, 94307, 4987, 5332, 63010, 34422, 20764, 12040, 37278, 91196, 62345, 77612, 59400, 35873, 47700, 59001, 41405, 61262, 17755, 80341, 48096, 74447, 57695, 32720, 7675, 66264, 94989, 59753, 78455, 82026, 77634, 36752, 11703, 13070, 70625, 21236, 95664, 14053, 95530, 62633, 26408, 36803, 9035, 12260, 93925, 53380, 61892, 26529, 20794, 14224, 90866, 45863, 12081, 39825, 46133, 64470, 85345, 28399, 46748, 43149, 18865, 39244, 19561, 93663, 56556, 79339, 78466, 16687, 78619, 47431, 94721, 79914, 97231, 9320, 6215, 60330, 8650, 22274, 43360, 56102, 10501, 92670, 73420, 42972, 5072, 45341, 93140, 4179, 85166, 69956, 39956, 71145, 28693, 80126, 87305, 47479, 46988, 40733, 25260, 46759, 81146, 14154, 38205, 30561, 6988, 2628, 98728, 48737, 51979, 84591, 16037, 20119, 38738, 56630, 9424, 54024, 34663, 58041, 34746, 25783, 29175, 15753, 85046, 61817, 85653, 8875, 74038, 34028, 33811, 84408, 84643, 24528, 73515, 11679, 80652, 7900, 78570, 49589, 38617, 1923, 36098, 70737, 89494, 94250, 96337, 44520, 8261, 95353, 51301, 72848, 46111, 26976, 27211, 25615, 20854, 85637, 69039, 81556, 57737, 33737, 75266, 26089, 87574, 65672, 63967, 5909, 20008, 92008, 34758, 19431, 49979, 21914, 18806, 25087, 89959, 6335, 51677, 90303, 64919, 50716, 61000, 91661, 56187, 57779, 57435, 40953, 6232, 69139, 73095, 57966, 5236, 35647, 17137, 26407, 63948, 24813, 20916, 98654, 74887, 19637, 72042, 8838, 15496, 24209, 4352, 53459, 34478, 37861, 53129, 39058, 98478, 3612, 93230, 7098, 40338, 33679, 3026, 27237, 65859, 69047, 98060, 6078, 32434, 64662, 34887, 37545, 15792, 8082, 9782, 16571, 11106, 63577, 33128, 88240, 68080, 21871, 73743, 47533, 93346, 62326, 39989, 74892, 60340, 45050, 25876, 93653, 83326, 83770, 83063, 21119, 13319, 23886, 50308, 45792, 69824, 68322, 76916, 98661, 63843, 80908, 29412, 73707, 93456, 57284, 47686, 77742, 89476, 75600, 52688, 18227, 51066, 47976, 83126, 82452, 18589, 82344, 54135, 18485, 77424, 49922, 38453, 71442, 9935, 8887, 32839, 53477, 16191, 17335, 42409, 26088, 48718, 19269, 781, 24239, 86714, 42446, 50862, 26141, 46080, 48407, 36272, 20672, 43943, 27097, 37202, 19086, 12297, 477, 86355, 2580, 17621, 37806, 19523, 55603, 71832, 1048, 41490, 59723, 53085, 39072, 22780, 53311, 52927, 29854, 96804, 48837, 97641, 42218, 51159, 66791, 1575, 93894, 41477, 81917, 70236, 24299, 39753, 82293, 14180, 60882, 46366, 40960, 86101, 95678, 19486, 47227, 20785, 4759, 68545, 88544, 41004, 50784, 71490, 64295, 16718, 76421, 4545, 8640, 54326, 9698, 85792, 87825, 4642, 80910, 8842, 66190, 42206, 17235, 5775, 87121, 7626, 80961, 21530, 70257, 40723, 55221, 18984, 53892, 67714, 17035, 90515, 17408, 59979, 70977, 68833, 62453, 1980, 50661, 83382, 87179, 81100, 16763, 89182, 93155, 74244, 676, 67019, 49769, 88697, 401, 84920, 95066, 89884, 11297, 34509, 21857, 27200, 37485, 55759, 22130, 37982, 93399, 68892, 14539, 73350, 82343, 38067, 3534, 94881, 98224, 43654, 61729, 90470, 49985, 75619, 48378, 33632, 91109, 13757, 35016, 7586, 42690, 72470, 13779, 67939, 39885, 45855, 3845, 20921, 34103, 2974, 47933, 2634, 22846, 41907, 4938, 60024, 97000, 19384, 97293, 19289, 90667, 23829, 76929, 91715, 26736, 34961, 99818, 10819, 15693, 6039, 26836, 94470, 89119, 71702, 91635, 80939, 6574, 48887, 98801, 60713, 51927, 35965, 64823, 1197, 87221, 10874, 64257, 40483, 3217, 71929, 89517, 98783, 86686, 6739, 13437, 89624, 57004, 72599, 4139, 49158, 63032, 14803, 20129, 91947, 23798, 46395, 42753, 93947, 50077, 58368, 67757, 62655, 74607, 75426, 77656, 89917, 40852, 31985, 41984, 6160, 49943, 63289, 53433, 86063, 83951, 74896, 99682, 59308, 70365, 79507, 75695, 93795, 80567, 96435, 1367, 26403, 39250, 56508, 44048, 45290, 24234, 31386, 40564, 84639, 12052, 94737, 93156, 59015, 9002, 18152, 64179, 84170, 44151, 49461, 40409, 48544, 76620, 32357, 34156, 70502, 64028, 99664, 16549, 37099, 65475, 22472, 40731, 43104, 22580, 5634, 43386, 93308, 60367, 66612, 42114, 59194, 36320, 98440, 21698, 38578, 86699, 78015, 42383, 59212, 70233, 10757, 99423, 17882, 64370, 92376, 29521, 22321, 52810, 24394, 15387, 75263, 21596, 23675, 67601, 23440, 59075, 64648, 34908, 83563, 35896, 23476, 15336, 19167, 54472, 75842, 12580, 10317, 74182, 61981, 60483, 94157, 83088, 31668, 66931, 82297, 37882, 53760, 69941, 66369, 25622, 97450, 54101, 17500, 45040, 4109, 71392, 75567, 41674, 22481, 40516, 99913, 85059, 8255, 17161, 83774, 9819, 44175, 59938, 75559, 70522, 64315, 9593, 89592, 29410, 50492, 12929, 76988, 96682, 70209, 94643, 89027, 36608, 3878, 2932, 33934, 47447, 36645, 6099, 23373, 57038, 44428, 54192, 1774, 21221, 77559, 18471, 47981, 2303, 31993, 11052, 58085, 41924, 2145, 17150, 36417, 22262, 53647, 18099, 41785, 32113, 54121, 70852, 22965, 96916, 30115, 89270, 27229, 48435, 69424, 93937, 66787, 79563, 4665, 56602, 68172, 65024, 49746, 2354, 173, 97087, 13222, 17025, 54654, 94251, 63925, 94910, 55571, 66980, 82352, 58256, 27412, 9124, 15844, 85030, 4751, 55618, 21349, 92951, 53698, 98239, 86145, 80645, 30294, 50246, 6615, 96173, 65114, 84623, 64066, 2030, 78094, 37733, 37935, 17471, 49176, 98501, 90001, 487, 22207, 42669, 22562, 20420, 29363, 12292, 5900, 57268, 25729, 84159, 33472, 78527, 23347, 74237, 25915, 76621, 58232, 86514, 29326, 5756, 51583, 5970, 67214, 64414, 9388, 27503, 51404, 39777, 80315, 46875, 44466, 26034, 63644, 46067, 28233, 79386, 9719, 88297, 72709, 8115, 61740, 83837, 57031, 86562, 90495, 1936, 36054, 533, 16424, 87767, 9190, 811, 86303, 25516, 34533, 5969, 26704, 33465, 76662, 97952, 16588, 35323, 51666, 90771, 82530, 58088, 95523, 15277, 86611, 97447, 61978, 40266, 41586, 11628, 30897, 72360, 92857, 65876, 72474, 73917, 81516, 95028, 95880, 62822, 65290, 92737, 13921, 72063, 29786, 6510, 14398, 88669, 35337, 45162, 92693, 77193, 31116, 29034, 87709, 63513, 93512, 21765, 213, 88543, 86210, 25476, 71489, 30392, 77387, 52617, 26414, 13098, 36491, 8867, 7920, 319, 30210, 56563, 58986, 52833, 13448, 10835, 68315, 50915, 46362, 42936, 43761, 70844, 98999, 36217, 71346, 59919, 46843, 8670, 95934, 94674, 49328, 40962, 18960, 70637, 29378, 95567, 25934, 79846, 79877, 53492, 3990, 80978, 58607, 46101, 94156, 31994, 95414, 32592, 86882, 96028, 9559, 62759, 7799, 69352, 85241, 21959, 55567, 74101, 80186, 79237, 4332, 81130, 18615, 31897, 5360, 4944, 38887, 97366, 65734, 12746, 25388, 25434, 10856, 28594, 73185, 71853, 70919, 32564, 34747, 94802, 16872, 33191, 80962, 61313, 64843, 81112, 95650, 62101, 28337, 79207, 46187, 96679, 47428, 82968, 11640, 30217, 47943, 83986, 82598, 11244, 3194, 64418]
>>> bins = np.arange(1, 100000, 5000)
>>> bins
array([    1,  5001, 10001, 15001, 20001, 25001, 30001, 35001, 40001,
       45001, 50001, 55001, 60001, 65001, 70001, 75001, 80001, 85001,
       90001, 95001])
>>> hist, bins = np.histogram(data, bins)
>>> bins
array([    1,  5001, 10001, 15001, 20001, 25001, 30001, 35001, 40001,
       45001, 50001, 55001, 60001, 65001, 70001, 75001, 80001, 85001,
       90001, 95001])
>>> hist
array([51, 61, 43, 53, 53, 52, 51, 47, 48, 56, 46, 44, 54, 41, 50, 43, 50,
       52, 55], dtype=int64)
>>> np.searchsorted
<function searchsorted at 0x0000000002E18198>
>>> [bins.searchsorted(x, 'right') for x in data]
[9, 17, 7, 10, 18, 5, 19, 6, 7, 6, 3, 11, 5, 3, 4, 1, 14, 3, 18, 16, 19, 6, 11, 20, 10, 16, 13, 5, 14, 20, 7, 7, 13, 1, 2, 19, 18, 1, 19, 2, 14, 11, 6, 12, 13, 8, 14, 16, 2, 20, 7, 7, 20, 13, 13, 2, 18, 2, 7, 19, 1, 2, 13, 7, 5, 3, 8, 19, 13, 16, 12, 8, 10, 12, 9, 13, 4, 17, 10, 15, 12, 7, 2, 14, 19, 12, 16, 17, 16, 8, 3, 3, 15, 5, 20, 3, 20, 13, 6, 8, 2, 3, 19, 11, 13, 6, 5, 3, 19, 10, 3, 8, 10, 13, 18, 6, 10, 9, 4, 8, 4, 19, 12, 16, 16, 4, 16, 10, 19, 16, 20, 2, 2, 13, 2, 5, 9, 12, 3, 19, 15, 9, 2, 10, 19, 1, 18, 14, 8, 15, 6, 17, 18, 10, 10, 9, 6, 10, 17, 3, 8, 7, 2, 1, 20, 10, 11, 17, 4, 5, 8, 12, 2, 11, 7, 12, 7, 6, 6, 4, 18, 13, 18, 2, 15, 7, 7, 17, 17, 5, 15, 3, 17, 2, 16, 10, 8, 1, 8, 15, 18, 19, 20, 9, 2, 20, 11, 15, 10, 6, 6, 6, 5, 18, 14, 17, 12, 7, 16, 6, 18, 14, 13, 2, 5, 19, 7, 4, 10, 5, 4, 6, 18, 2, 11, 19, 13, 11, 13, 19, 12, 12, 12, 9, 2, 14, 15, 12, 2, 8, 4, 6, 13, 5, 5, 20, 15, 4, 15, 2, 4, 5, 1, 11, 7, 8, 11, 8, 20, 1, 19, 2, 9, 7, 1, 6, 14, 14, 20, 2, 7, 13, 7, 8, 4, 2, 2, 4, 3, 13, 7, 18, 14, 5, 15, 10, 19, 13, 8, 15, 13, 10, 6, 19, 17, 17, 17, 5, 3, 5, 11, 10, 14, 14, 16, 20, 13, 17, 6, 15, 19, 12, 10, 16, 18, 16, 11, 4, 11, 10, 17, 17, 4, 17, 11, 4, 16, 10, 8, 15, 2, 2, 7, 11, 4, 4, 9, 6, 10, 4, 1, 5, 18, 9, 11, 6, 10, 10, 8, 5, 9, 6, 8, 4, 3, 1, 18, 1, 4, 8, 4, 12, 15, 1, 9, 12, 11, 8, 5, 11, 11, 6, 20, 10, 20, 9, 11, 14, 1, 19, 9, 17, 15, 5, 8, 17, 3, 13, 10, 9, 18, 20, 4, 10, 5, 1, 14, 18, 9, 11, 15, 13, 4, 16, 1, 2, 11, 2, 18, 18, 1, 17, 2, 14, 9, 4, 2, 18, 2, 17, 5, 15, 9, 12, 4, 11, 14, 4, 19, 4, 12, 15, 14, 13, 1, 11, 17, 18, 17, 4, 18, 19, 15, 1, 14, 10, 18, 1, 17, 20, 18, 3, 7, 5, 6, 8, 12, 5, 8, 19, 14, 3, 15, 17, 8, 1, 19, 20, 9, 13, 19, 10, 16, 10, 7, 19, 3, 8, 2, 9, 15, 3, 14, 8, 10, 1, 5, 7, 1, 10, 1, 5, 9, 1, 13, 20, 4, 20, 4, 19, 5, 16, 19, 6, 7, 20, 3, 4, 2, 6, 19, 18, 15, 19, 17, 2, 10, 20, 13, 11, 8, 13, 1, 18, 3, 13, 9, 1, 15, 18, 20, 18, 2, 3, 18, 12, 15, 1, 10, 13, 3, 5, 19, 5, 10, 9, 19, 11, 12, 14, 13, 15, 16, 16, 18, 9, 7, 9, 2, 10, 13, 11, 18, 17, 15, 20, 12, 15, 16, 16, 19, 17, 20, 1, 6, 8, 12, 9, 10, 5, 7, 9, 17, 3, 19, 19, 12, 2, 4, 13, 17, 9, 10, 9, 10, 16, 7, 7, 15, 13, 20, 4, 8, 14, 5, 9, 9, 5, 2, 9, 19, 13, 14, 9, 12, 8, 20, 5, 8, 18, 16, 9, 12, 15, 3, 20, 4, 13, 19, 6, 5, 11, 5, 4, 16, 5, 5, 14, 5, 12, 13, 7, 17, 8, 5, 4, 4, 11, 16, 3, 3, 15, 13, 13, 19, 17, 7, 14, 17, 8, 11, 14, 14, 6, 20, 11, 4, 10, 1, 15, 16, 9, 5, 9, 20, 18, 2, 4, 17, 2, 9, 12, 16, 15, 13, 2, 18, 6, 11, 3, 16, 20, 15, 19, 18, 8, 1, 1, 7, 10, 8, 2, 5, 12, 9, 11, 1, 5, 16, 4, 10, 1, 7, 3, 12, 9, 1, 4, 8, 5, 11, 4, 9, 7, 11, 15, 5, 20, 7, 18, 6, 10, 14, 19, 14, 16, 1, 12, 14, 14, 10, 1, 1, 20, 3, 4, 11, 19, 13, 19, 12, 14, 17, 12, 6, 2, 4, 18, 1, 12, 5, 19, 11, 20, 18, 17, 7, 11, 2, 20, 14, 17, 13, 1, 16, 8, 8, 4, 10, 20, 19, 1, 5, 9, 5, 5, 6, 3, 2, 12, 6, 17, 7, 16, 5, 15, 6, 16, 12, 18, 6, 2, 11, 2, 14, 13, 2, 6, 11, 8, 17, 10, 9, 6, 13, 10, 6, 16, 2, 18, 15, 2, 13, 17, 12, 18, 19, 1, 8, 1, 4, 18, 2, 1, 18, 6, 7, 2, 6, 7, 16, 20, 4, 8, 11, 19, 17, 12, 20, 4, 18, 20, 13, 9, 9, 3, 7, 15, 19, 14, 15, 15, 17, 20, 20, 13, 14, 19, 3, 15, 6, 2, 3, 18, 8, 10, 19, 16, 7, 6, 18, 13, 19, 5, 1, 18, 18, 6, 15, 7, 16, 11, 6, 3, 8, 2, 2, 1, 7, 12, 12, 11, 3, 3, 14, 11, 10, 9, 9, 15, 20, 8, 15, 12, 10, 2, 20, 19, 10, 9, 4, 15, 6, 20, 6, 16, 16, 11, 1, 17, 12, 10, 19, 7, 20, 7, 18, 20, 2, 13, 2, 14, 18, 5, 12, 15, 17, 16, 1, 17, 4, 7, 2, 1, 8, 20, 14, 3, 6, 6, 3, 6, 15, 15, 15, 7, 7, 19, 4, 7, 17, 13, 13, 17, 20, 13, 6, 16, 10, 20, 10, 17, 3, 7, 10, 17, 17, 3, 1, 13]
>>>
>>>
>>>
>>>
>>> range(1, 100, 0.2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: range() integer step argument expected, got float.
>>> np.arange(1, 100, 0.2)
array([  1. ,   1.2,   1.4,   1.6,   1.8,   2. ,   2.2,   2.4,   2.6,
         2.8,   3. ,   3.2,   3.4,   3.6,   3.8,   4. ,   4.2,   4.4,
         4.6,   4.8,   5. ,   5.2,   5.4,   5.6,   5.8,   6. ,   6.2,
         6.4,   6.6,   6.8,   7. ,   7.2,   7.4,   7.6,   7.8,   8. ,
         8.2,   8.4,   8.6,   8.8,   9. ,   9.2,   9.4,   9.6,   9.8,
        10. ,  10.2,  10.4,  10.6,  10.8,  11. ,  11.2,  11.4,  11.6,
        11.8,  12. ,  12.2,  12.4,  12.6,  12.8,  13. ,  13.2,  13.4,
        13.6,  13.8,  14. ,  14.2,  14.4,  14.6,  14.8,  15. ,  15.2,
        15.4,  15.6,  15.8,  16. ,  16.2,  16.4,  16.6,  16.8,  17. ,
        17.2,  17.4,  17.6,  17.8,  18. ,  18.2,  18.4,  18.6,  18.8,
        19. ,  19.2,  19.4,  19.6,  19.8,  20. ,  20.2,  20.4,  20.6,
        20.8,  21. ,  21.2,  21.4,  21.6,  21.8,  22. ,  22.2,  22.4,
        22.6,  22.8,  23. ,  23.2,  23.4,  23.6,  23.8,  24. ,  24.2,
        24.4,  24.6,  24.8,  25. ,  25.2,  25.4,  25.6,  25.8,  26. ,
        26.2,  26.4,  26.6,  26.8,  27. ,  27.2,  27.4,  27.6,  27.8,
        28. ,  28.2,  28.4,  28.6,  28.8,  29. ,  29.2,  29.4,  29.6,
        29.8,  30. ,  30.2,  30.4,  30.6,  30.8,  31. ,  31.2,  31.4,
        31.6,  31.8,  32. ,  32.2,  32.4,  32.6,  32.8,  33. ,  33.2,
        33.4,  33.6,  33.8,  34. ,  34.2,  34.4,  34.6,  34.8,  35. ,
        35.2,  35.4,  35.6,  35.8,  36. ,  36.2,  36.4,  36.6,  36.8,
        37. ,  37.2,  37.4,  37.6,  37.8,  38. ,  38.2,  38.4,  38.6,
        38.8,  39. ,  39.2,  39.4,  39.6,  39.8,  40. ,  40.2,  40.4,
        40.6,  40.8,  41. ,  41.2,  41.4,  41.6,  41.8,  42. ,  42.2,
        42.4,  42.6,  42.8,  43. ,  43.2,  43.4,  43.6,  43.8,  44. ,
        44.2,  44.4,  44.6,  44.8,  45. ,  45.2,  45.4,  45.6,  45.8,
        46. ,  46.2,  46.4,  46.6,  46.8,  47. ,  47.2,  47.4,  47.6,
        47.8,  48. ,  48.2,  48.4,  48.6,  48.8,  49. ,  49.2,  49.4,
        49.6,  49.8,  50. ,  50.2,  50.4,  50.6,  50.8,  51. ,  51.2,
        51.4,  51.6,  51.8,  52. ,  52.2,  52.4,  52.6,  52.8,  53. ,
        53.2,  53.4,  53.6,  53.8,  54. ,  54.2,  54.4,  54.6,  54.8,
        55. ,  55.2,  55.4,  55.6,  55.8,  56. ,  56.2,  56.4,  56.6,
        56.8,  57. ,  57.2,  57.4,  57.6,  57.8,  58. ,  58.2,  58.4,
        58.6,  58.8,  59. ,  59.2,  59.4,  59.6,  59.8,  60. ,  60.2,
        60.4,  60.6,  60.8,  61. ,  61.2,  61.4,  61.6,  61.8,  62. ,
        62.2,  62.4,  62.6,  62.8,  63. ,  63.2,  63.4,  63.6,  63.8,
        64. ,  64.2,  64.4,  64.6,  64.8,  65. ,  65.2,  65.4,  65.6,
        65.8,  66. ,  66.2,  66.4,  66.6,  66.8,  67. ,  67.2,  67.4,
        67.6,  67.8,  68. ,  68.2,  68.4,  68.6,  68.8,  69. ,  69.2,
        69.4,  69.6,  69.8,  70. ,  70.2,  70.4,  70.6,  70.8,  71. ,
        71.2,  71.4,  71.6,  71.8,  72. ,  72.2,  72.4,  72.6,  72.8,
        73. ,  73.2,  73.4,  73.6,  73.8,  74. ,  74.2,  74.4,  74.6,
        74.8,  75. ,  75.2,  75.4,  75.6,  75.8,  76. ,  76.2,  76.4,
        76.6,  76.8,  77. ,  77.2,  77.4,  77.6,  77.8,  78. ,  78.2,
        78.4,  78.6,  78.8,  79. ,  79.2,  79.4,  79.6,  79.8,  80. ,
        80.2,  80.4,  80.6,  80.8,  81. ,  81.2,  81.4,  81.6,  81.8,
        82. ,  82.2,  82.4,  82.6,  82.8,  83. ,  83.2,  83.4,  83.6,
        83.8,  84. ,  84.2,  84.4,  84.6,  84.8,  85. ,  85.2,  85.4,
        85.6,  85.8,  86. ,  86.2,  86.4,  86.6,  86.8,  87. ,  87.2,
        87.4,  87.6,  87.8,  88. ,  88.2,  88.4,  88.6,  88.8,  89. ,
        89.2,  89.4,  89.6,  89.8,  90. ,  90.2,  90.4,  90.6,  90.8,
        91. ,  91.2,  91.4,  91.6,  91.8,  92. ,  92.2,  92.4,  92.6,
        92.8,  93. ,  93.2,  93.4,  93.6,  93.8,  94. ,  94.2,  94.4,
        94.6,  94.8,  95. ,  95.2,  95.4,  95.6,  95.8,  96. ,  96.2,
        96.4,  96.6,  96.8,  97. ,  97.2,  97.4,  97.6,  97.8,  98. ,
        98.2,  98.4,  98.6,  98.8,  99. ,  99.2,  99.4,  99.6,  99.8])
>>> a = range(1, 100)
>>> a
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> np.dif(a)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'module' object has no attribute 'dif'
>>> np.diff(a)
array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1])
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> import pandas as pd
>>> data = pd.read_csv('Spirit - Right Information at the Right Time_2016_AST_pro_mar.csv', header=0, parse_dates=[0], infer_datetime_format = True, dayfirst = True)
>>> data
                  Dates                 Queue  ChatsConnected  Hot Leads  \
0   2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1   2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2   2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3   2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4   2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45
5   2016-03-01 05:00:00  optus-CMR-Mobile-New               0         75
6   2016-03-01 06:00:00  optus-CMR-Mobile-New               6        161
7   2016-03-01 07:00:00  optus-CMR-Mobile-New               4        366
8   2016-03-01 08:00:00  optus-CMR-Mobile-New              21        667
9   2016-03-01 09:00:00  optus-CMR-Mobile-New              19        871
10  2016-03-01 10:00:00  optus-CMR-Mobile-New              22        954
11  2016-03-01 11:00:00  optus-CMR-Mobile-New              18        961
12  2016-03-01 12:00:00  optus-CMR-Mobile-New               6       1043
13  2016-03-01 13:00:00  optus-CMR-Mobile-New              25        996
14  2016-03-01 14:00:00  optus-CMR-Mobile-New              46        937
15  2016-03-01 15:00:00  optus-CMR-Mobile-New              48        901
16  2016-03-01 16:00:00  optus-CMR-Mobile-New              25        775
17  2016-03-01 17:00:00  optus-CMR-Mobile-New              12        687
18  2016-03-01 18:00:00  optus-CMR-Mobile-New              13        612
19  2016-03-01 19:00:00  optus-CMR-Mobile-New               3        580
20  2016-03-01 20:00:00  optus-CMR-Mobile-New              12        629
21  2016-03-01 21:00:00  optus-CMR-Mobile-New               1        555
22  2016-03-01 22:00:00  optus-CMR-Mobile-New               6        429
23  2016-03-01 23:00:00  optus-CMR-Mobile-New               3        282
24  2016-03-02 00:00:00  optus-CMR-Mobile-New               3        164
25  2016-03-02 01:00:00  optus-CMR-Mobile-New               2         79
26  2016-03-02 02:00:00  optus-CMR-Mobile-New               1         55
27  2016-03-02 03:00:00  optus-CMR-Mobile-New               0         41
28  2016-03-02 04:00:00  optus-CMR-Mobile-New               0         45
29  2016-03-02 05:00:00  optus-CMR-Mobile-New               0         81
..                  ...                   ...             ...        ...
714 2016-03-30 18:00:00  optus-CMR-Mobile-New              16        834
715 2016-03-30 19:00:00  optus-CMR-Mobile-New              12        780
716 2016-03-30 20:00:00  optus-CMR-Mobile-New               6        715
717 2016-03-30 21:00:00  optus-CMR-Mobile-New               9        608
718 2016-03-30 22:00:00  optus-CMR-Mobile-New              12        476
719 2016-03-30 23:00:00  optus-CMR-Mobile-New               4        281
720 2016-03-31 00:00:00  optus-CMR-Mobile-New               2        147
721 2016-03-31 01:00:00  optus-CMR-Mobile-New               1         89
722 2016-03-31 02:00:00  optus-CMR-Mobile-New               2         61
723 2016-03-31 03:00:00  optus-CMR-Mobile-New               2         59
724 2016-03-31 04:00:00  optus-CMR-Mobile-New               2         53
725 2016-03-31 05:00:00  optus-CMR-Mobile-New               2         98
726 2016-03-31 06:00:00  optus-CMR-Mobile-New              12        156
727 2016-03-31 07:00:00  optus-CMR-Mobile-New              16        425
728 2016-03-31 08:00:00  optus-CMR-Mobile-New              22        843
729 2016-03-31 09:00:00  optus-CMR-Mobile-New              10       1152
730 2016-03-31 10:00:00  optus-CMR-Mobile-New               7       1321
731 2016-03-31 11:00:00  optus-CMR-Mobile-New              34        662
732 2016-03-31 12:00:00  optus-CMR-Mobile-New               8       1256
733 2016-03-31 13:00:00  optus-CMR-Mobile-New              10       1409
734 2016-03-31 14:00:00  optus-CMR-Mobile-New              15       1297
735 2016-03-31 15:00:00  optus-CMR-Mobile-New              28       1210
736 2016-03-31 16:00:00  optus-CMR-Mobile-New              40       1134
737 2016-03-31 17:00:00  optus-CMR-Mobile-New              20        594
738 2016-03-31 18:00:00  optus-CMR-Mobile-New               4        621
739 2016-03-31 19:00:00  optus-CMR-Mobile-New               5        818
740 2016-03-31 20:00:00  optus-CMR-Mobile-New               3        733
741 2016-03-31 21:00:00  optus-CMR-Mobile-New               2        629
742 2016-03-31 22:00:00  optus-CMR-Mobile-New               0        517
743 2016-03-31 23:00:00  optus-CMR-Mobile-New               0        282

     Invites Accepted  Interactive Chats  Invites Offered
0                   4                  4              127
1                   0                  0               27
2                   1                  0                7
3                   0                  0               19
4                   0                  0                0
5                   1                  0               55
6                   7                  6              149
7                   3                  2               93
8                  23                 20              466
9                  21                 18              606
10                 28                 18              610
11                 20                 15              446
12                  6                  6              229
13                 28                 19              542
14                 49                 39              850
15                 51                 42              831
16                 27                 23              512
17                 11                  9              350
18                 16                 11              315
19                  4                  4               87
20                 16                 12              327
21                  2                  0               40
22                  7                  6              218
23                  2                  1               94
24                  5                  3              127
25                  1                  2                7
26                  1                  1               10
27                  0                  0                0
28                  1                  0                6
29                  0                  0               25
..                ...                ...              ...
714                22                 16              444
715                11                  8              199
716                10                  6              200
717                18                 11              238
718                15                 12              249
719                 6                  4              181
720                 3                  1              113
721                 1                  2               29
722                 2                  2               34
723                 2                  1               36
724                 2                  2               47
725                 2                  2               82
726                12                 11              142
727                18                 13              284
728                21                 21              456
729                14                  9              300
730                 8                  6              236
731                40                 27              521
732                 8                  8              117
733                13                  9              299
734                18                 15              442
735                32                 22              507
736                45                 36              881
737                15                 13              281
738                 2                  1               42
739                 6                  4               50
740                 6                  0               64
741                 0                  1               43
742                 1                  0               31
743                 1                  0               11

[744 rows x 7 columns]
>>> data.columns
Index([u'Dates', u'Queue', u'ChatsConnected', u'Hot Leads',
       u'Invites Accepted', u'Interactive Chats', u'Invites Offered'],
      dtype='object')
>>> data.head()
                Dates                 Queue  ChatsConnected  Hot Leads  \
0 2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1 2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2 2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3 2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4 2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45

   Invites Accepted  Interactive Chats  Invites Offered
0                 4                  4              127
1                 0                  0               27
2                 1                  0                7
3                 0                  0               19
4                 0                  0                0
>>> data.tail()
                  Dates                 Queue  ChatsConnected  Hot Leads  \
739 2016-03-31 19:00:00  optus-CMR-Mobile-New               5        818
740 2016-03-31 20:00:00  optus-CMR-Mobile-New               3        733
741 2016-03-31 21:00:00  optus-CMR-Mobile-New               2        629
742 2016-03-31 22:00:00  optus-CMR-Mobile-New               0        517
743 2016-03-31 23:00:00  optus-CMR-Mobile-New               0        282

     Invites Accepted  Interactive Chats  Invites Offered
739                 6                  4               50
740                 6                  0               64
741                 0                  1               43
742                 1                  0               31
743                 1                  0               11
>>> type(data)
<class 'pandas.core.frame.DataFrame'>
>>> data.decribe
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Anaconda2\lib\site-packages\pandas\core\generic.py", line 2744, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'DataFrame' object has no attribute 'decribe'
>>> data.describe
<bound method DataFrame.describe of                   Dates                 Queue  ChatsConnected  Hot Leads  \
0   2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1   2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2   2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3   2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4   2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45
5   2016-03-01 05:00:00  optus-CMR-Mobile-New               0         75
6   2016-03-01 06:00:00  optus-CMR-Mobile-New               6        161
7   2016-03-01 07:00:00  optus-CMR-Mobile-New               4        366
8   2016-03-01 08:00:00  optus-CMR-Mobile-New              21        667
9   2016-03-01 09:00:00  optus-CMR-Mobile-New              19        871
10  2016-03-01 10:00:00  optus-CMR-Mobile-New              22        954
11  2016-03-01 11:00:00  optus-CMR-Mobile-New              18        961
12  2016-03-01 12:00:00  optus-CMR-Mobile-New               6       1043
13  2016-03-01 13:00:00  optus-CMR-Mobile-New              25        996
14  2016-03-01 14:00:00  optus-CMR-Mobile-New              46        937
15  2016-03-01 15:00:00  optus-CMR-Mobile-New              48        901
16  2016-03-01 16:00:00  optus-CMR-Mobile-New              25        775
17  2016-03-01 17:00:00  optus-CMR-Mobile-New              12        687
18  2016-03-01 18:00:00  optus-CMR-Mobile-New              13        612
19  2016-03-01 19:00:00  optus-CMR-Mobile-New               3        580
20  2016-03-01 20:00:00  optus-CMR-Mobile-New              12        629
21  2016-03-01 21:00:00  optus-CMR-Mobile-New               1        555
22  2016-03-01 22:00:00  optus-CMR-Mobile-New               6        429
23  2016-03-01 23:00:00  optus-CMR-Mobile-New               3        282
24  2016-03-02 00:00:00  optus-CMR-Mobile-New               3        164
25  2016-03-02 01:00:00  optus-CMR-Mobile-New               2         79
26  2016-03-02 02:00:00  optus-CMR-Mobile-New               1         55
27  2016-03-02 03:00:00  optus-CMR-Mobile-New               0         41
28  2016-03-02 04:00:00  optus-CMR-Mobile-New               0         45
29  2016-03-02 05:00:00  optus-CMR-Mobile-New               0         81
..                  ...                   ...             ...        ...
714 2016-03-30 18:00:00  optus-CMR-Mobile-New              16        834
715 2016-03-30 19:00:00  optus-CMR-Mobile-New              12        780
716 2016-03-30 20:00:00  optus-CMR-Mobile-New               6        715
717 2016-03-30 21:00:00  optus-CMR-Mobile-New               9        608
718 2016-03-30 22:00:00  optus-CMR-Mobile-New              12        476
719 2016-03-30 23:00:00  optus-CMR-Mobile-New               4        281
720 2016-03-31 00:00:00  optus-CMR-Mobile-New               2        147
721 2016-03-31 01:00:00  optus-CMR-Mobile-New               1         89
722 2016-03-31 02:00:00  optus-CMR-Mobile-New               2         61
723 2016-03-31 03:00:00  optus-CMR-Mobile-New               2         59
724 2016-03-31 04:00:00  optus-CMR-Mobile-New               2         53
725 2016-03-31 05:00:00  optus-CMR-Mobile-New               2         98
726 2016-03-31 06:00:00  optus-CMR-Mobile-New              12        156
727 2016-03-31 07:00:00  optus-CMR-Mobile-New              16        425
728 2016-03-31 08:00:00  optus-CMR-Mobile-New              22        843
729 2016-03-31 09:00:00  optus-CMR-Mobile-New              10       1152
730 2016-03-31 10:00:00  optus-CMR-Mobile-New               7       1321
731 2016-03-31 11:00:00  optus-CMR-Mobile-New              34        662
732 2016-03-31 12:00:00  optus-CMR-Mobile-New               8       1256
733 2016-03-31 13:00:00  optus-CMR-Mobile-New              10       1409
734 2016-03-31 14:00:00  optus-CMR-Mobile-New              15       1297
735 2016-03-31 15:00:00  optus-CMR-Mobile-New              28       1210
736 2016-03-31 16:00:00  optus-CMR-Mobile-New              40       1134
737 2016-03-31 17:00:00  optus-CMR-Mobile-New              20        594
738 2016-03-31 18:00:00  optus-CMR-Mobile-New               4        621
739 2016-03-31 19:00:00  optus-CMR-Mobile-New               5        818
740 2016-03-31 20:00:00  optus-CMR-Mobile-New               3        733
741 2016-03-31 21:00:00  optus-CMR-Mobile-New               2        629
742 2016-03-31 22:00:00  optus-CMR-Mobile-New               0        517
743 2016-03-31 23:00:00  optus-CMR-Mobile-New               0        282

     Invites Accepted  Interactive Chats  Invites Offered
0                   4                  4              127
1                   0                  0               27
2                   1                  0                7
3                   0                  0               19
4                   0                  0                0
5                   1                  0               55
6                   7                  6              149
7                   3                  2               93
8                  23                 20              466
9                  21                 18              606
10                 28                 18              610
11                 20                 15              446
12                  6                  6              229
13                 28                 19              542
14                 49                 39              850
15                 51                 42              831
16                 27                 23              512
17                 11                  9              350
18                 16                 11              315
19                  4                  4               87
20                 16                 12              327
21                  2                  0               40
22                  7                  6              218
23                  2                  1               94
24                  5                  3              127
25                  1                  2                7
26                  1                  1               10
27                  0                  0                0
28                  1                  0                6
29                  0                  0               25
..                ...                ...              ...
714                22                 16              444
715                11                  8              199
716                10                  6              200
717                18                 11              238
718                15                 12              249
719                 6                  4              181
720                 3                  1              113
721                 1                  2               29
722                 2                  2               34
723                 2                  1               36
724                 2                  2               47
725                 2                  2               82
726                12                 11              142
727                18                 13              284
728                21                 21              456
729                14                  9              300
730                 8                  6              236
731                40                 27              521
732                 8                  8              117
733                13                  9              299
734                18                 15              442
735                32                 22              507
736                45                 36              881
737                15                 13              281
738                 2                  1               42
739                 6                  4               50
740                 6                  0               64
741                 0                  1               43
742                 1                  0               31
743                 1                  0               11

[744 rows x 7 columns]>
>>> data.describe()
       ChatsConnected    Hot Leads  Invites Accepted  Interactive Chats  \
count      744.000000   744.000000        744.000000         744.000000
mean         9.263441   485.985215         10.474462           8.051075
std          9.343769   345.220340         10.225158           8.202522
min          0.000000    16.000000          0.000000           0.000000
25%          1.000000   142.750000          2.000000           1.000000
50%          6.000000   482.000000          8.000000           5.000000
75%         15.000000   730.000000         16.000000          13.000000
max         48.000000  1409.000000         51.000000          42.000000

       Invites Offered
count       744.000000
mean        244.344086
std         209.596613
min           0.000000
25%          46.750000
50%         187.500000
75%         400.000000
max         881.000000
>>> data.dtypes
Dates                datetime64[ns]
Queue                        object
ChatsConnected                int64
Hot Leads                     int64
Invites Accepted              int64
Interactive Chats             int64
Invites Offered               int64
dtype: object
>>> data['DOW'] = data['Dates'].apply(lambda x: x.strftime("%A"))
>>> data['DOW']
0        Tuesday
1        Tuesday
2        Tuesday
3        Tuesday
4        Tuesday
5        Tuesday
6        Tuesday
7        Tuesday
8        Tuesday
9        Tuesday
10       Tuesday
11       Tuesday
12       Tuesday
13       Tuesday
14       Tuesday
15       Tuesday
16       Tuesday
17       Tuesday
18       Tuesday
19       Tuesday
20       Tuesday
21       Tuesday
22       Tuesday
23       Tuesday
24     Wednesday
25     Wednesday
26     Wednesday
27     Wednesday
28     Wednesday
29     Wednesday
         ...
714    Wednesday
715    Wednesday
716    Wednesday
717    Wednesday
718    Wednesday
719    Wednesday
720     Thursday
721     Thursday
722     Thursday
723     Thursday
724     Thursday
725     Thursday
726     Thursday
727     Thursday
728     Thursday
729     Thursday
730     Thursday
731     Thursday
732     Thursday
733     Thursday
734     Thursday
735     Thursday
736     Thursday
737     Thursday
738     Thursday
739     Thursday
740     Thursday
741     Thursday
742     Thursday
743     Thursday
Name: DOW, dtype: object
>>> data.columns
Index([u'Dates', u'Queue', u'ChatsConnected', u'Hot Leads',
       u'Invites Accepted', u'Interactive Chats', u'Invites Offered', u'DOW'],
      dtype='object')
>>> data.head()
                Dates                 Queue  ChatsConnected  Hot Leads  \
0 2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1 2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2 2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3 2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4 2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45

   Invites Accepted  Interactive Chats  Invites Offered      DOW
0                 4                  4              127  Tuesday
1                 0                  0               27  Tuesday
2                 1                  0                7  Tuesday
3                 0                  0               19  Tuesday
4                 0                  0                0  Tuesday
>>> data.dow_a = data['Dates'].apply(lambda x: x.strftime("%A"))
>>> data.columns
Index([u'Dates', u'Queue', u'ChatsConnected', u'Hot Leads',
       u'Invites Accepted', u'Interactive Chats', u'Invites Offered', u'DOW'],
      dtype='object')
>>> data.head()
                Dates                 Queue  ChatsConnected  Hot Leads  \
0 2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1 2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2 2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3 2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4 2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45

   Invites Accepted  Interactive Chats  Invites Offered      DOW
0                 4                  4              127  Tuesday
1                 0                  0               27  Tuesday
2                 1                  0                7  Tuesday
3                 0                  0               19  Tuesday
4                 0                  0                0  Tuesday
>>> dir(data)
['ChatsConnected', 'DOW', 'Dates', 'Queue', 'T', '_AXIS_ALIASES', '_AXIS_IALIASES', '_AXIS_LEN', '_AXIS_NAMES', '_AXIS_NUMBERS', '_AXIS_ORDERS', '_AXIS_REVERSED', '_AXIS_SLICEMAP', '__abs__', '__add__', '__and__', '__array__', '__array_wrap__', '__bool__', '__bytes__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dict__', '__dir__', '__div__', '__doc__', '__eq__', '__finalize__', '__floordiv__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__getitem__', '__getstate__', '__gt__', '__hash__', '__iadd__', '__idiv__', '__imul__', '__init__', '__invert__', '__ipow__', '__isub__', '__iter__', '__itruediv__', '__le__', '__len__', '__lt__', '__mod__', '__module__', '__mul__', '__ne__', '__neg__', '__new__', '__nonzero__', '__or__', '__pow__', '__radd__', '__rand__', '__rdiv__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__unicode__', '__weakref__', '__xor__', '_accessors', '_add_numeric_operations', '_add_series_only_operations', '_add_series_or_dataframe_operations', '_agg_by_level', '_align_frame', '_align_series', '_apply_broadcast', '_apply_empty_result', '_apply_raw', '_apply_standard', '_at', '_box_col_values', '_box_item_values', '_check_inplace_setting', '_check_is_chained_assignment_possible', '_check_percentile', '_check_setitem_copy', '_clear_item_cache', '_combine_const', '_combine_frame', '_combine_match_columns', '_combine_match_index', '_combine_series', '_combine_series_infer', '_compare_frame', '_compare_frame_evaluate', '_consolidate_inplace', '_construct_axes_dict', '_construct_axes_dict_for_slice', '_construct_axes_dict_from', '_construct_axes_from_arguments', '_constructor', '_constructor_expanddim', '_constructor_sliced', '_convert', '_count_level', '_create_indexer', '_dir_additions', '_dir_deletions', '_ensure_valid_index', '_expand_axes', '_flex_compare_frame', '_from_arrays', '_from_axes', '_get_agg_axis', '_get_axis', '_get_axis_name', '_get_axis_number', '_get_axis_resolvers', '_get_block_manager_axis', '_get_bool_data', '_get_cacher', '_get_index_resolvers', '_get_item_cache', '_get_numeric_data', '_get_values', '_getitem_array', '_getitem_column', '_getitem_frame', '_getitem_multilevel', '_getitem_slice', '_iat', '_iget_item_cache', '_iloc', '_indexed_same', '_info_axis', '_info_axis_name', '_info_axis_number', '_info_repr', '_init_dict', '_init_mgr', '_init_ndarray', '_internal_names', '_internal_names_set', '_is_cached', '_is_datelike_mixed_type', '_is_mixed_type', '_is_numeric_mixed_type', '_is_view', '_ix', '_ixs', '_join_compat', '_loc', '_maybe_cache_changed', '_maybe_update_cacher', '_metadata', '_needs_reindex_multi', '_nsorted', '_protect_consolidate', '_reduce', '_reindex_axes', '_reindex_axis', '_reindex_columns', '_reindex_index', '_reindex_multi', '_reindex_with_indexers', '_repr_fits_horizontal_', '_repr_fits_vertical_', '_repr_html_', '_repr_latex_', '_reset_cache', '_reset_cacher', '_sanitize_column', '_series', '_set_as_cached', '_set_axis', '_set_axis_name', '_set_is_copy', '_set_item', '_setitem_array', '_setitem_frame', '_setitem_slice', '_setup_axes', '_slice', '_stat_axis', '_stat_axis_name', '_stat_axis_number', '_typ', '_unpickle_frame_compat', '_unpickle_matrix_compat', '_update_inplace', '_validate_dtype', '_values', '_where', '_xs', 'abs', 'add', 'add_prefix', 'add_suffix', 'align', 'all', 'any', 'append', 'apply', 'applymap', 'as_blocks', 'as_matrix', 'asfreq', 'asof', 'assign', 'astype', 'at', 'at_time', 'axes', 'between_time', 'bfill', 'blocks', 'bool', 'boxplot', 'clip', 'clip_lower', 'clip_upper', 'columns', 'combine', 'combineAdd', 'combineMult', 'combine_first', 'compound', 'consolidate', 'convert_objects', 'copy', 'corr', 'corrwith', 'count', 'cov', 'cummax', 'cummin', 'cumprod', 'cumsum', 'describe', 'diff', 'div', 'divide', 'dot', 'drop', 'drop_duplicates', 'dropna', 'dtypes', 'duplicated', 'empty', 'eq', 'equals', 'eval', 'ewm', 'expanding', 'ffill', 'fillna', 'filter', 'first', 'first_valid_index', 'floordiv', 'from_csv', 'from_dict', 'from_items', 'from_records', 'ftypes', 'ge', 'get', 'get_dtype_counts', 'get_ftype_counts', 'get_value', 'get_values', 'groupby', 'gt', 'head', 'hist', 'iat', 'icol', 'idxmax', 'idxmin', 'iget_value', 'iloc', 'index', 'info', 'insert', 'interpolate', 'irow', 'is_copy', 'isin', 'isnull', 'iteritems', 'iterkv', 'iterrows', 'itertuples', 'ix', 'join', 'keys', 'kurt', 'kurtosis', 'last', 'last_valid_index', 'le', 'loc', 'lookup', 'lt', 'mad', 'mask', 'max', 'mean', 'median', 'memory_usage', 'merge', 'min', 'mod', 'mode', 'mul', 'multiply', 'ndim', 'ne', 'nlargest', 'notnull', 'nsmallest', 'pct_change', 'pipe', 'pivot', 'pivot_table', 'plot', 'pop', 'pow', 'prod', 'product', 'quantile', 'query', 'radd', 'rank', 'rdiv', 'reindex', 'reindex_axis', 'reindex_like', 'rename', 'rename_axis', 'reorder_levels', 'replace', 'resample', 'reset_index', 'rfloordiv', 'rmod', 'rmul', 'rolling', 'round', 'rpow', 'rsub', 'rtruediv', 'sample', 'select', 'select_dtypes', 'sem', 'set_axis', 'set_index', 'set_value', 'shape', 'shift', 'size', 'skew', 'slice_shift', 'sort', 'sort_index', 'sort_values', 'sortlevel', 'squeeze', 'stack', 'std', 'style', 'sub', 'subtract', 'sum', 'swapaxes', 'swaplevel', 'tail', 'take', 'to_clipboard', 'to_csv', 'to_dense', 'to_dict', 'to_excel', 'to_gbq', 'to_hdf', 'to_html', 'to_json', 'to_latex', 'to_msgpack', 'to_panel', 'to_period', 'to_pickle', 'to_records', 'to_sparse', 'to_sql', 'to_stata', 'to_string', 'to_timestamp', 'to_xarray', 'transpose', 'truediv', 'truncate', 'tshift', 'tz_convert', 'tz_localize', 'unstack', 'update', 'values', 'var', 'where', 'xs']
>>> [x for x in dir(data) if 'dow' in x]
[]
>>> [x for x in dir(data) if 'DOW' in x]
['DOW']
>>> [x for x in dir(data) if 'dow' in x.lower()]
['DOW']
>>> data.dow_a = data['Dates'].apply(lambda x: x.strftime("%A"))
>>> [x for x in dir(data) if 'dow' in x.lower()]
['DOW']
>>> data['dow_a'] = data['Dates'].apply(lambda x: x.strftime("%A"))
>>> [x for x in dir(data) if 'dow' in x.lower()]
['DOW', 'dow_a']
>>> data.drop(['dow_a'], axis=1)
                  Dates                 Queue  ChatsConnected  Hot Leads  \
0   2016-03-01 00:00:00  optus-CMR-Mobile-New               4        129
1   2016-03-01 01:00:00  optus-CMR-Mobile-New               0         69
2   2016-03-01 02:00:00  optus-CMR-Mobile-New               0         54
3   2016-03-01 03:00:00  optus-CMR-Mobile-New               0         37
4   2016-03-01 04:00:00  optus-CMR-Mobile-New               0         45
5   2016-03-01 05:00:00  optus-CMR-Mobile-New               0         75
6   2016-03-01 06:00:00  optus-CMR-Mobile-New               6        161
7   2016-03-01 07:00:00  optus-CMR-Mobile-New               4        366
8   2016-03-01 08:00:00  optus-CMR-Mobile-New              21        667
9   2016-03-01 09:00:00  optus-CMR-Mobile-New              19        871
10  2016-03-01 10:00:00  optus-CMR-Mobile-New              22        954
11  2016-03-01 11:00:00  optus-CMR-Mobile-New              18        961
12  2016-03-01 12:00:00  optus-CMR-Mobile-New               6       1043
13  2016-03-01 13:00:00  optus-CMR-Mobile-New              25        996
14  2016-03-01 14:00:00  optus-CMR-Mobile-New              46        937
15  2016-03-01 15:00:00  optus-CMR-Mobile-New              48        901
16  2016-03-01 16:00:00  optus-CMR-Mobile-New              25        775
17  2016-03-01 17:00:00  optus-CMR-Mobile-New              12        687
18  2016-03-01 18:00:00  optus-CMR-Mobile-New              13        612
19  2016-03-01 19:00:00  optus-CMR-Mobile-New               3        580
20  2016-03-01 20:00:00  optus-CMR-Mobile-New              12        629
21  2016-03-01 21:00:00  optus-CMR-Mobile-New               1        555
22  2016-03-01 22:00:00  optus-CMR-Mobile-New               6        429
23  2016-03-01 23:00:00  optus-CMR-Mobile-New               3        282
24  2016-03-02 00:00:00  optus-CMR-Mobile-New               3        164
25  2016-03-02 01:00:00  optus-CMR-Mobile-New               2         79
26  2016-03-02 02:00:00  optus-CMR-Mobile-New               1         55
27  2016-03-02 03:00:00  optus-CMR-Mobile-New               0         41
28  2016-03-02 04:00:00  optus-CMR-Mobile-New               0         45
29  2016-03-02 05:00:00  optus-CMR-Mobile-New               0         81
..                  ...                   ...             ...        ...
714 2016-03-30 18:00:00  optus-CMR-Mobile-New              16        834
715 2016-03-30 19:00:00  optus-CMR-Mobile-New              12        780
716 2016-03-30 20:00:00  optus-CMR-Mobile-New               6        715
717 2016-03-30 21:00:00  optus-CMR-Mobile-New               9        608
718 2016-03-30 22:00:00  optus-CMR-Mobile-New              12        476
719 2016-03-30 23:00:00  optus-CMR-Mobile-New               4        281
720 2016-03-31 00:00:00  optus-CMR-Mobile-New               2        147
721 2016-03-31 01:00:00  optus-CMR-Mobile-New               1         89
722 2016-03-31 02:00:00  optus-CMR-Mobile-New               2         61
723 2016-03-31 03:00:00  optus-CMR-Mobile-New               2         59
724 2016-03-31 04:00:00  optus-CMR-Mobile-New               2         53
725 2016-03-31 05:00:00  optus-CMR-Mobile-New               2         98
726 2016-03-31 06:00:00  optus-CMR-Mobile-New              12        156
727 2016-03-31 07:00:00  optus-CMR-Mobile-New              16        425
728 2016-03-31 08:00:00  optus-CMR-Mobile-New              22        843
729 2016-03-31 09:00:00  optus-CMR-Mobile-New              10       1152
730 2016-03-31 10:00:00  optus-CMR-Mobile-New               7       1321
731 2016-03-31 11:00:00  optus-CMR-Mobile-New              34        662
732 2016-03-31 12:00:00  optus-CMR-Mobile-New               8       1256
733 2016-03-31 13:00:00  optus-CMR-Mobile-New              10       1409
734 2016-03-31 14:00:00  optus-CMR-Mobile-New              15       1297
735 2016-03-31 15:00:00  optus-CMR-Mobile-New              28       1210
736 2016-03-31 16:00:00  optus-CMR-Mobile-New              40       1134
737 2016-03-31 17:00:00  optus-CMR-Mobile-New              20        594
738 2016-03-31 18:00:00  optus-CMR-Mobile-New               4        621
739 2016-03-31 19:00:00  optus-CMR-Mobile-New               5        818
740 2016-03-31 20:00:00  optus-CMR-Mobile-New               3        733
741 2016-03-31 21:00:00  optus-CMR-Mobile-New               2        629
742 2016-03-31 22:00:00  optus-CMR-Mobile-New               0        517
743 2016-03-31 23:00:00  optus-CMR-Mobile-New               0        282

     Invites Accepted  Interactive Chats  Invites Offered        DOW
0                   4                  4              127    Tuesday
1                   0                  0               27    Tuesday
2                   1                  0                7    Tuesday
3                   0                  0               19    Tuesday
4                   0                  0                0    Tuesday
5                   1                  0               55    Tuesday
6                   7                  6              149    Tuesday
7                   3                  2               93    Tuesday
8                  23                 20              466    Tuesday
9                  21                 18              606    Tuesday
10                 28                 18              610    Tuesday
11                 20                 15              446    Tuesday
12                  6                  6              229    Tuesday
13                 28                 19              542    Tuesday
14                 49                 39              850    Tuesday
15                 51                 42              831    Tuesday
16                 27                 23              512    Tuesday
17                 11                  9              350    Tuesday
18                 16                 11              315    Tuesday
19                  4                  4               87    Tuesday
20                 16                 12              327    Tuesday
21                  2                  0               40    Tuesday
22                  7                  6              218    Tuesday
23                  2                  1               94    Tuesday
24                  5                  3              127  Wednesday
25                  1                  2                7  Wednesday
26                  1                  1               10  Wednesday
27                  0                  0                0  Wednesday
28                  1                  0                6  Wednesday
29                  0                  0               25  Wednesday
..                ...                ...              ...        ...
714                22                 16              444  Wednesday
715                11                  8              199  Wednesday
716                10                  6              200  Wednesday
717                18                 11              238  Wednesday
718                15                 12              249  Wednesday
719                 6                  4              181  Wednesday
720                 3                  1              113   Thursday
721                 1                  2               29   Thursday
722                 2                  2               34   Thursday
723                 2                  1               36   Thursday
724                 2                  2               47   Thursday
725                 2                  2               82   Thursday
726                12                 11              142   Thursday
727                18                 13              284   Thursday
728                21                 21              456   Thursday
729                14                  9              300   Thursday
730                 8                  6              236   Thursday
731                40                 27              521   Thursday
732                 8                  8              117   Thursday
733                13                  9              299   Thursday
734                18                 15              442   Thursday
735                32                 22              507   Thursday
736                45                 36              881   Thursday
737                15                 13              281   Thursday
738                 2                  1               42   Thursday
739                 6                  4               50   Thursday
740                 6                  0               64   Thursday
741                 0                  1               43   Thursday
742                 1                  0               31   Thursday
743                 1                  0               11   Thursday

[744 rows x 8 columns]
>>> data.columns
Index([u'Dates', u'Queue', u'ChatsConnected', u'Hot Leads',
       u'Invites Accepted', u'Interactive Chats', u'Invites Offered', u'DOW',
       u'dow_a'],
      dtype='object')
>>> data.drop(['dow_a'], axis=1, inplace=True)
>>> data.columns
Index([u'Dates', u'Queue', u'ChatsConnected', u'Hot Leads',
       u'Invites Accepted', u'Interactive Chats', u'Invites Offered', u'DOW'],
      dtype='object')
>>> data.groupby('DOW')['ChatsConnected'].sum()
DOW
Friday        973
Monday        661
Saturday      643
Sunday        554
Thursday     1354
Tuesday      1271
Wednesday    1436
Name: ChatsConnected, dtype: int64
>>> data.groupby('DOW')['ChatsConnected']
<pandas.core.groupby.SeriesGroupBy object at 0x00000000062536D8>
>>> data.groupby('DOW')['ChatsConnected'].sum()
DOW
Friday        973
Monday        661
Saturday      643
Sunday        554
Thursday     1354
Tuesday      1271
Wednesday    1436
Name: ChatsConnected, dtype: int64
>>> data.groupby('DOW')['ChatsConnected'].mean()
DOW
Friday       10.135417
Monday        6.885417
Saturday      6.697917
Sunday        5.770833
Thursday     11.283333
Tuesday      10.591667
Wednesday    11.966667
Name: ChatsConnected, dtype: float64
>>> data.groupby('DOW')['ChatsConnected'].std()
DOW
Friday        8.728200
Monday        7.253122
Saturday      6.600032
Sunday        6.061925
Thursday     10.181697
Tuesday      10.515691
Wednesday    11.417172
Name: ChatsConnected, dtype: float64
>>> data.groupby('DOW')[['ChatsConnected', ['Hot Leads]]].mean()
  File "<stdin>", line 1
    data.groupby('DOW')[['ChatsConnected', ['Hot Leads]]].mean()
                                                               ^
SyntaxError: EOL while scanning string literal
>>> data.groupby('DOW')[['ChatsConnected', ['Hot Leads']]].mean()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Anaconda2\lib\site-packages\pandas\core\base.py", line 335, in __getitem__
    bad_keys = list(set(key).difference(self.obj.columns))
TypeError: unhashable type: 'list'
>>> data.groupby('DOW')[['ChatsConnected', 'Hot Leads']].mean()
           ChatsConnected   Hot Leads
DOW
Friday          10.135417  454.041667
Monday           6.885417  536.583333
Saturday         6.697917  369.020833
Sunday           5.770833  344.135417
Thursday        11.283333  536.683333
Tuesday         10.591667  561.475000
Wednesday       11.966667  551.925000
>>> data.groupby('DOW')['ChatsConnected'].mean()
DOW
Friday       10.135417
Monday        6.885417
Saturday      6.697917
Sunday        5.770833
Thursday     11.283333
Tuesday      10.591667
Wednesday    11.966667
Name: ChatsConnected, dtype: float64
>>> data.groupby('DOW').agg({'ChatsConnected': [min , max, np.mean, np.std]})
          ChatsConnected
                     min max       mean        std
DOW
Friday                 0  32  10.135417   8.728200
Monday                 0  29   6.885417   7.253122
Saturday               0  30   6.697917   6.600032
Sunday                 0  26   5.770833   6.061925
Thursday               0  40  11.283333  10.181697
Tuesday                0  48  10.591667  10.515691
Wednesday              0  45  11.966667  11.417172
>>> data.groupby('DOW').agg({'ChatsConnected': [min , max, np.mean, np.std], 'Hot Leads': [min, max]})
          ChatsConnected                           Hot Leads
                     min max       mean        std       min   max
DOW
Friday                 0  32  10.135417   8.728200        30  1121
Monday                 0  29   6.885417   7.253122        28  1376
Saturday               0  30   6.697917   6.600032        16   774
Sunday                 0  26   5.770833   6.061925        19   674
Thursday               0  40  11.283333  10.181697        39  1409
Tuesday                0  48  10.591667  10.515691        31  1264
Wednesday              0  45  11.966667  11.417172        25  1193
>>>